(function() { var debugMode = false; 
/*!
 * Kraken 2017 CrossView.
 * http://alizarion.github.io/kraken
 *
 * Kraken, v1.0.0
 * Apache 2.0 license.*/
function uiCodemirrorDirective(e,o){function r(e,r,s,c){var l=angular.extend({value:r.text()},o.codemirror||{},e.$eval(s.uiCodemirror),e.$eval(s.uiCodemirrorOpts)),u=n(r,l);t(u,s.uiCodemirror||s.uiCodemirrorOpts,e),a(u,c,e),i(u,s.uiRefresh,e),console.log("dsqds"),e.$on("CodeMirror",function(e,o){if(console.log("fsdf"),!angular.isFunction(o))throw new Error("the CodeMirror event requires a callback function");o(u)}),angular.isFunction(l.onLoad)&&l.onLoad(u)}function n(e,o){var r;return"TEXTAREA"===e[0].tagName?r=window.CodeMirror.fromTextArea(e[0],o):(e.html(""),r=new window.CodeMirror(function(o){e.append(o)},o)),r}function t(e,o,r){function n(o,r){angular.isObject(o)&&t.forEach(function(n){if(o.hasOwnProperty(n)){if(r&&o[n]===r[n])return;e.setOption(n,o[n])}})}if(o){var t=Object.keys(window.CodeMirror.defaults);r.$watch(o,n,!0)}}function a(o,r,n){r&&(r.$formatters.push(function(e){if(angular.isUndefined(e)||null===e)return"";if(angular.isObject(e)||angular.isArray(e))throw new Error("ui-codemirror cannot use an object or an array as a model");return e}),r.$render=function(){var n=r.$viewValue||"";e(function(){o.setValue(n)},300)},o.on("change",function(e){var o=e.getValue();o!==r.$viewValue&&n.$evalAsync(function(){r.$setViewValue(o),n.$applyAsync(function(){n.$broadcast("compose:update:yaml"),n.$emit("compose:update:yaml")})})}))}function i(o,r,n){r&&n.$watch(r,function(r,n){r!==n&&e(function(){o.refresh()})})}return{restrict:"EA",require:"?ngModel",compile:function(){if(angular.isUndefined(window.CodeMirror))throw new Error("ui-codemirror needs CodeMirror to work... (o rly?)");return r}}}angular.module("kraken",["kraken.codemirror","ui.layout","ui.bootstrap","ui.router","ncy-angular-breadcrumb"]).config(["$compileProvider","$locationProvider",function(e,o){o.html5Mode(!1),o.hashPrefix(""),e.aHrefSanitizationWhitelist(/^\s*(https?|data|mailto|chrome-extension):/)}]),angular.module("kraken").config(["$compileProvider",function(e){e.aHrefSanitizationWhitelist(/^\s*(https?|data|mailto|chrome-extension):/)}]),angular.module("kraken").config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"app/components/home/home.html",controllerAs:"home",ncyBreadcrumb:{label:"Home"}}).state({name:"home.edit",url:"/edit",templateUrl:"app/components/edit/edit.html",controller:"EditCtrl",controllerAs:"edit",ncyBreadcrumb:{label:"Edit {{edit.currentProject.name}}"}}),o.otherwise("/home")}]),angular.module("kraken.codemirror",[]).constant("uiCodemirrorConfig",{}).directive("uiCodemirror",["$timeout","uiCodemirrorConfig",uiCodemirrorDirective]),angular.module("kraken").directive("krVisNetwork",["util","LogService",function(e,o){return{restrict:"EA",transclude:!1,scope:{options:"=",jsonCompose:"=",events:"="},link:function(o,r,n){var t=["click","doubleclick","oncontext","hold","release","selectNode","selectEdge","deselectNode","deselectEdge","dragStart","dragging","dragEnd","hoverNode","blurNode","zoom","showPopup","hidePopup","startStabilizing","stabilizationProgress","stabilizationIterationsDone","stabilized","resize","initRedraw","beforeDrawing","afterDrawing","animationFinished"],a=this;a.network=null,a.data=null,a.options={autoResize:!0,height:"100%",width:"100%",interaction:{navigationButtons:!0,keyboard:!1},physics:{forceAtlas2Based:{gravitationalConstant:-26,centralGravity:.005,springLength:230,springConstant:.18},maxVelocity:146,solver:"forceAtlas2Based",timestep:.35,stabilization:{enabled:!0,iterations:2e3,updateInterval:50}},layout:{randomSeed:34}},o.$watch("jsonCompose",function(){if(null!=o.jsonCompose){var n=e.composeToVis(o.jsonCompose),i=new vis.DataSet(n.nodes),s=new vis.DataSet(n.edges);a.network?(a.data.nodes.forEach(function(e){i.get(e.id)||a.data.nodes.remove(e.id)}),a.data.edges.forEach(function(e){s.get(e.id)||a.data.edges.remove(e.id)}),a.data.nodes.update(n.nodes),a.data.edges.update(n.edges)):(a.data={nodes:i,edges:s},a.network=new vis.Network(r[0],a.data,a.options)),angular.forEach(o.events,function(e,o){t.indexOf(String(o))>=0&&a.network.on(o,e)}),null!=o.events&&null!=o.events.onload&&angular.isFunction(o.events.onload)&&o.events.onload(graph)}})}}}]),angular.module("kraken").factory("Compose",["$rootScope",function(e){function o(o){var r=this;return o?(o.name||(o.name="initial-default-docker-compose.yml"),o.json||(o.json={version:2,services:{proxy:{image:"httpd",ports:["80:80"]}}})):o={name:"initial-default-docker-compose.yml",json:{version:2,services:{proxy:{image:"httpd",ports:["80:80"]}}}},o.$yaml=jsyaml.safeDump(o.json),e.$on("compose:update:yaml",function(){r.$reloadFromYaml()}),angular.extend(r,o||{})}return o.prototype.$reloadFromYaml=function(){this.$yaml&&(console.log(this.$yaml),this.json=jsyaml.safeLoad(this.$yaml))},o.prototype.$reloadFromJson=function(){this.json&&(this.$yaml=jsyaml.safeDump(this.json))},o}]),angular.module("kraken").factory("Project",["Compose","LocalFileReader","$q","$window",function(e,o,r,n){function t(o){var r=this;return r.composes=[],r.id=(new Date).getTime(),o&&(o.id&&(r.id=o.id),o.name&&(r.name=o.name),o.composes&&angular.forEach(o.composes,function(o){r.composes.push(new e(o)),console.log("compose reloaded")})),r}return t.prototype.$save=function(){var o=localStorage.getItem("kraken_projects"),r=[];o&&(r=angular.fromJson(o));var n=this;n.composes.length<=0&&n.composes.push(new e);var a=t.$getById(this.id);a.position>=0&&r.splice(a.position,1),r.push(n),localStorage.setItem("kraken_projects",angular.toJson(r))},t.prototype.$refreshYamlFromJson=function(){var e=this;e.composes&&angular.forEach(e.composes,function(e){e.$reloadFromJson()})},t.$loadAll=function(){var e=localStorage.getItem("kraken_projects"),o=[],r=[];return e&&(o=angular.fromJson(e)),angular.forEach(o,function(e){r.push(new t(e))}),angular.forEach(r,function(e){e.$refreshYamlFromJson()}),r},t.prototype.getCompose=function(){var e=this,o=null;return angular.forEach(e.composes,function(e){o=angular.merge(e.json,o)}),o},t.$getById=function(e){var o=localStorage.getItem("kraken_projects"),r=[],n=null,t=-1;if(o){r=angular.fromJson(o);var a=!1;angular.forEach(r,function(o,r){a||o.id===e&&(n=o,t=r)})}return n||console.warn("project with id "+e+"not found"),{project:n,position:t}},t.prototype.$drop=function(){var e=n.confirm("Are you sure you want to delete this project?");if(e){var o=localStorage.getItem("kraken_projects"),r=[];o&&(r=angular.fromJson(o));var a=t.$getById(this.id);console.log("drop",a),a.position>=0&&r.splice(a.position,1),localStorage.setItem("kraken_projects",angular.toJson(r))}},t.prototype.loadAllLocally=function(n){var t=this,a=r.defer(),i=[];return angular.forEach(n,function(r){i.push(o.readAsText(r).then(function(o){t.composes.push(new e({name:r.name,$yaml:o,json:jsyaml.safeLoad(o)}))}))}),r.all(i).then(function(){a.resolve(t.getCompose())},function(e){a.reject(e)}),a.promise},t}]),angular.module("kraken").directive("krFileSelect",[function(){return{restrict:"EA",scope:{getFile:"&"},link:function(e,o){o.bind("change",function(o){var r=(o.srcElement||o.target).files;console.log(r),e.getFile({files:r})})}}}]),function(e){var o=function(e,o,r){var n=function(e,o,r){return function(){r.$apply(function(){o.resolve(e.result)})}},t=function(e,o,r){return function(){r.$apply(function(){o.reject(e.result)})}},a=function(e,o){return function(e){o.$broadcast("fileProgress",{total:e.total,loaded:e.loaded})}},i=function(e,o){var r=new FileReader;return r.onload=n(r,e,o),r.onerror=t(r,e,o),r.onprogress=a(r,o),r},s=function(o){var n=e.defer(),t=i(n,r);return t.readAsText(o),n.promise};return{readAsText:s}};e.factory("LocalFileReader",["$q","$log","$rootScope",o])}(angular.module("kraken")),angular.module("kraken").service("LogService",[function(){var e=this;return e.history=[],{warn:function(o){e.history.push({type:"warning",message:o,date:new Date})},error:function(o){e.history.push({type:"danger",message:o,date:new Date})},info:function(o){e.history.push({type:"info",message:o,date:new Date})},history:e.history}}]).factory("$exceptionHandler",["$log","LogService",function(e,o){return function(r,n){o.error(r),e.warn(r,n)}}]),angular.module("kraken").service("ProjectService",["Project",function(e){var o=this;return o.refresh=function(){o.loadedProjects=e.$loadAll()},o.getLoadedProjects=function(){return o.loadedProjects},o.getCurrentProject=function(){return o.currentProject},o.setCurrentProject=function(e){o.currentProject=e},o}]),angular.module("kraken").service("util",["LogService",function(e){function o(o){var t=[],a=[],i=null;if(o.networks)if("object"==typeof o.networks)for(var s in o.networks){var c=o.networks[s];c?"object"==typeof c&&c.external&&c.external.name&&(i={id:"networks-"+c.external.name,label:"networks : "+c.external.name,size:10,color:"red",shape:"icon",icon:{face:"FontAwesome",code:"",size:50,color:"#303336"},shadow:!0},t.pushUnique(i)):t.pushUniqueNode({id:"networks-"+s,label:r+s,size:10,color:"red",shape:"icon",icon:{face:"FontAwesome",code:"",size:50,color:"#303336"},shadow:!0})}else e.warn("expected an array of  networks, and simple string found");i||t.pushUniqueNode({id:"networks-default",label:r+"default",size:10,color:"red",shape:"icon",icon:{face:"FontAwesome",code:"",size:50,color:"#303336"},shadow:!0});var l;l=o.services?o.services:o,console.log(l);for(var u in l){var d=l[u];if(d){if(t.pushUniqueNode({id:"services-"+u,label:n+u,size:10,icon:{face:"FontAwesome",code:"",size:50,color:"#4078c0"},shape:"icon",shadow:!0}),d.networks)if(Array.isArray(d.networks)||"object"==typeof d.networks)for(var f in d.networks){var m=null,p=f,g=d.networks[p];if(Array.isArray(d.networks)?p=g?g:"":g&&g.aliases&&Array.isArray(g.aliases)&&angular.forEach(g.aliases,function(e){m=m?m+", "+(e?e:""):"aliases : "+(e?e:"")}),"default"===p&&i)a.pushUniqueNode({id:"services-"+u+"-to-networks-default",from:"services-"+u,label:m?m:"",to:i.id});else{console.log(m),a.pushUniqueNode({id:"services-"+u+"-to-networks-"+p,from:"services-"+u,label:m?m:"",to:"networks-"+p});var h={id:"networks-"+p,label:r+p,size:10,color:"blue",shape:"icon",icon:{face:"FontAwesome",code:"",size:50,color:"#777"},shadow:!0};t.arrayNodeIndexOf(h)<0&&t.pushUniqueNode({id:"networks-"+p,label:r+p,size:10,color:"blue",shape:"icon",icon:{face:"FontAwesome",code:"",size:50,color:"#777"},shadow:!0}),e.warn("service "+u+" linked with  unknown network : "+p)}}else e.warn("expected an array of services networks, simple string found");else i?a.pushUniqueNode({id:"services-"+u+"-to-networks-default",from:"services-"+u,to:i.id}):a.pushUniqueNode({id:"services-"+u+"-to-networks-default",from:"services-"+u,to:"networks-default"});if(d.links)for(var v in d.links)if(d.links[v]){var w=d.links[v].split(":");a.pushUniqueNode({id:"services-"+u+"-to-services-"+w[0]+"-as-"+w[1],from:"services-"+u,label:w[1]?w[1]:w[0],arrows:"to",smooth:!0,dashes:!0,to:"services-"+w[0]})}}}return{edges:a,nodes:t}}var r="network : ",n="service : ";return{composeToVis:o}}]),angular.module("kraken").filter("encodeURI",[function(){return window.encodeURIComponent}]),angular.module("kraken").controller("EditCtrl",["Project","LogService","$timeout","ProjectService","$scope","Compose",function(e,o,r,n,t,a){var i=this;i.currentProject=n.getCurrentProject()||new e,i.active=0,i.refreshEditor=function(){r(function(){t.$broadcast("CodeMirror",function(e){e.refresh()})},250)},i.removeCompose=function(e,o,r){console.log(o);var r=i.currentProject.composes.indexOf(e);console.log(r),r>=0&&(i.currentProject.composes.splice(r,1),i.currentProject.getCompose()),i.active=r-1>=0?r-1:0,i.refreshEditor(),o.preventDefault()},i.addNewCompose=function(e){var o=prompt("Please enter your docker compose file name",".yml");o&&i.currentProject.composes.push(new a({name:o})),i.refreshEditor(),e.preventDefault(),r(function(){i.active=i.currentProject.composes.length-1},100)},i.logService=o,i.downloadYaml=function(){var e=0,o=[];angular.forEach(i.currentProject.composes,function(){console.log("downloadAnchorElem"+e),o.push(document.getElementById("downloadAnchorElem"+e)),e++}),setTimeout(function(){console.log(o);for(var e in o)o[e].click()},200)},i.editorOptions={lineWrapping:!0,lineNumbers:!0,matchTags:{bothTags:!0},extraKeys:{"Ctrl-Space":"autocomplete"},foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter","CodeMirror-lint-markers"],styleActiveLine:!0,theme:"dracula",lint:!0,mode:"text/x-yaml",smartIndent:!1,indentWithTabs:!1,commands:{save:function(){console.log("dsave")}}},i.refreshEditor()}]),angular.module("kraken").controller("HomeCtrl",["Project","$uibModal","$state","ProjectService","$scope",function(e,o,r,n,t){var a=this;a.projectService=n,a.projectService.refresh(),a.setCurrentProject=function(e){a.projectService.setCurrentProject(e),r.transitionTo("home.edit")},a.createNewProject=function(){o.open({animation:!0,template:'<div class="container-fluid"><form novalidate><div class="modal-header"> <h3 class="modal-title" id="modal-title">Create new project</h3> </div><div class="modal-body" id="modal-body"><div class="form-group"> <label for="usr">Project Name:</label> <input type="text" required minlength="2" ng-model="project.name" class="form-control" id="usr"> </div> <ul><li ng-repeat="compose in project.composes">{{compose.name}} : <b>services </b> <span ng-repeat="(key,value) in compose.json.services">{{key}}, </span> </li></ul><label  class="btn btn-primary btn-lg btn-block btn-file">Import your Docker Compose files (Optional)<input type="file" multiple accept=".yml" kr-file-select get-file="project.loadAllLocally(files)" class="hidden"> </label></div><div class="modal-footer"><button class="btn btn-primary" type="button" ng-click="ok()">OK</button> <button class="btn btn-warning" type="button" ng-click="cancel()">Cancel</button> </div></div></form>',controller:["$scope","Project","$uibModalInstance","ProjectService",function(e,o,r,n){e.project=new o,e.ok=function(){e.project.$save(),n.refresh(),r.close()},e.cancel=function(){r.close()}}]})}}]);
})();